{
  "commands": {
    "generate": {
      "aliases": [],
      "args": {
        "name": {
          "description": "directory name of new project",
          "name": "name",
          "required": true
        }
      },
      "description": "generate a new CLI\nThis will clone the template repo 'oclif/hello-world' and update package properties",
      "flags": {
        "defaults": {
          "hidden": true,
          "name": "defaults",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "generate",
      "pluginAlias": "oclif",
      "pluginName": "oclif",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "generate.js"
      ]
    },
    "lock": {
      "aliases": [],
      "args": {},
      "deprecationOptions": {
        "message": "oclif.lock is deprecated and will be removed in @oclif/plugin-plugins v5.0.0 and above."
      },
      "description": "Using oclif.lock allows your plugins dependencies to be locked to the version specified in the lock file during plugin install.\nOnce the oclif.lock file is created you can include it your npm package by adding it to the files property of your package.json. We do not recommend committing the oclif.lock file to git.\n\nPLEASE NOTE: the oclif.lock will only work for @oclif/plugin-plugins v3.4.0 and above. It will NOT be supported in v5.0.0 and above.",
      "flags": {},
      "hasDynamicHelp": false,
      "hidden": true,
      "hiddenAliases": [],
      "id": "lock",
      "pluginAlias": "oclif",
      "pluginName": "oclif",
      "pluginType": "core",
      "state": "deprecated",
      "strict": true,
      "summary": "Copy the yarn.lock to oclif.lock",
      "enableJsonFlag": false,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "lock.js"
      ]
    },
    "manifest": {
      "aliases": [],
      "args": {
        "path": {
          "default": ".",
          "description": "path to plugin",
          "name": "path"
        }
      },
      "description": "generates plugin manifest json",
      "flags": {
        "jit": {
          "name": "jit",
          "summary": "append commands from JIT plugins in manifest",
          "allowNo": true,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "manifest",
      "pluginAlias": "oclif",
      "pluginName": "oclif",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "manifest.js"
      ]
    },
    "promote": {
      "aliases": [],
      "args": {},
      "description": "promote CLI builds to a S3 release channel",
      "flags": {
        "channel": {
          "description": "which channel to promote to",
          "name": "channel",
          "required": true,
          "default": "stable",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "deb": {
          "char": "d",
          "description": "promote debian artifacts",
          "name": "deb",
          "allowNo": false,
          "type": "boolean"
        },
        "indexes": {
          "description": "append the promoted urls into the index files",
          "name": "indexes",
          "allowNo": false,
          "type": "boolean"
        },
        "macos": {
          "char": "m",
          "description": "promote macOS pkg",
          "name": "macos",
          "allowNo": false,
          "type": "boolean"
        },
        "max-age": {
          "char": "a",
          "description": "cache control max-age in seconds",
          "name": "max-age",
          "default": "86400",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "root": {
          "char": "r",
          "description": "path to the oclif CLI project root",
          "name": "root",
          "required": true,
          "default": ".",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "sha": {
          "description": "7-digit short git commit SHA of the CLI to promote",
          "name": "sha",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "targets": {
          "char": "t",
          "description": "comma-separated targets to promote (e.g.: linux-arm,win32-x64)",
          "name": "targets",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "version": {
          "description": "semantic version of the CLI to promote",
          "name": "version",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "win": {
          "char": "w",
          "description": "promote Windows exe",
          "name": "win",
          "allowNo": false,
          "type": "boolean"
        },
        "xz": {
          "description": "also upload xz",
          "name": "xz",
          "allowNo": true,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "promote",
      "pluginAlias": "oclif",
      "pluginName": "oclif",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "promote.js"
      ]
    },
    "readme": {
      "aliases": [],
      "args": {},
      "description": "adds commands to README.md in current directory\nThe readme must have any of the following tags inside of it for it to be replaced or else it will do nothing:\n# Usage\n<!-- usage -->\n# Commands\n<!-- commands -->\n# Table of contents\n<!-- toc -->\n\nCustomize the code URL prefix by setting oclif.repositoryPrefix in package.json.\n",
      "flags": {
        "aliases": {
          "description": "include aliases in the command list",
          "name": "aliases",
          "allowNo": true,
          "type": "boolean"
        },
        "dir": {
          "description": "output directory for multi docs",
          "name": "dir",
          "required": true,
          "default": "docs",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "multi": {
          "description": "create a different markdown page for each topic",
          "name": "multi",
          "allowNo": false,
          "type": "boolean"
        },
        "readme-path": {
          "description": "Path to the README file.",
          "name": "readme-path",
          "required": true,
          "default": "README.md",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "repository-prefix": {
          "description": "a template string used to build links to the source code",
          "name": "repository-prefix",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "version": {
          "description": "version to use in readme links. defaults to the version in package.json",
          "name": "version",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "readme",
      "pluginAlias": "oclif",
      "pluginName": "oclif",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "readme.js"
      ]
    },
    "generate:command": {
      "aliases": [],
      "args": {
        "name": {
          "description": "name of command",
          "name": "name",
          "required": true
        }
      },
      "description": "add a command to an existing CLI or plugin",
      "flags": {
        "force": {
          "description": "overwrite existing files",
          "name": "force",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "generate:command",
      "pluginAlias": "oclif",
      "pluginName": "oclif",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "generate",
        "command.js"
      ]
    },
    "generate:hook": {
      "aliases": [],
      "args": {
        "name": {
          "description": "name of hook (snake_case)",
          "name": "name",
          "required": true
        }
      },
      "description": "add a hook to an existing CLI or plugin",
      "flags": {
        "event": {
          "description": "event to run hook on",
          "name": "event",
          "default": "init",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "force": {
          "description": "overwrite existing files",
          "name": "force",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "generate:hook",
      "pluginAlias": "oclif",
      "pluginName": "oclif",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "generate",
        "hook.js"
      ]
    },
    "pack:deb": {
      "aliases": [],
      "args": {},
      "description": "Pack CLI into debian package.",
      "flags": {
        "compression": {
          "char": "z",
          "description": "For more details see the `-Zcompress-type` section at https://man7.org/linux/man-pages/man1/dpkg-deb.1.html",
          "name": "compression",
          "summary": "Override the default compression used by dpkg-deb.",
          "hasDynamicHelp": false,
          "multiple": false,
          "options": [
            "gzip",
            "none",
            "xz",
            "zstd"
          ],
          "type": "option"
        },
        "root": {
          "char": "r",
          "description": "Path to oclif CLI root.",
          "name": "root",
          "required": true,
          "default": ".",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "tarball": {
          "char": "t",
          "description": "Optionally specify a path to a tarball already generated by NPM.",
          "name": "tarball",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pack:deb",
      "pluginAlias": "oclif",
      "pluginName": "oclif",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pack",
        "deb.js"
      ]
    },
    "pack:macos": {
      "aliases": [],
      "args": {},
      "description": "pack CLI into macOS .pkg",
      "flags": {
        "additional-cli": {
          "description": "an Oclif CLI other than the one listed in config.bin that should be made available to the user\nthe CLI should already exist in a directory named after the CLI that is the root of the tarball produced by \"oclif pack:tarballs\"",
          "hidden": true,
          "name": "additional-cli",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "root": {
          "char": "r",
          "description": "path to oclif CLI root",
          "name": "root",
          "required": true,
          "default": ".",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "tarball": {
          "char": "t",
          "description": "optionally specify a path to a tarball already generated by NPM",
          "name": "tarball",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "targets": {
          "description": "comma-separated targets to pack (e.g.: darwin-x64,darwin-arm64)",
          "name": "targets",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pack:macos",
      "pluginAlias": "oclif",
      "pluginName": "oclif",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pack",
        "macos.js"
      ]
    },
    "pack:tarballs": {
      "aliases": [],
      "args": {},
      "description": "packages oclif CLI into tarballs\n\nThis can be used to create oclif CLIs that use the system node or that come preloaded with a node binary.\n",
      "flags": {
        "parallel": {
          "description": "build tarballs in parallel",
          "name": "parallel",
          "allowNo": false,
          "type": "boolean"
        },
        "root": {
          "char": "r",
          "description": "path to oclif CLI root",
          "name": "root",
          "required": true,
          "default": ".",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "tarball": {
          "char": "l",
          "description": "optionally specify a path to a tarball already generated by NPM",
          "name": "tarball",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "targets": {
          "char": "t",
          "description": "comma-separated targets to pack (e.g.: linux-arm,win32-x64)",
          "name": "targets",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "xz": {
          "description": "also build xz",
          "name": "xz",
          "allowNo": true,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pack:tarballs",
      "pluginAlias": "oclif",
      "pluginName": "oclif",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pack",
        "tarballs.js"
      ]
    },
    "pack:win": {
      "aliases": [],
      "args": {},
      "description": "create windows installer from oclif CLI\n  \n  This command will produce unsigned installers unless you supply WINDOWS_SIGNING_PASS (prefixed with the name of your executable, e.g. OCLIF_WINDOWS_SIGNING_PASS) in the environment and have set the windows.name and windows.keypath properties in your package.json's oclif property.",
      "flags": {
        "additional-cli": {
          "description": "an Oclif CLI other than the one listed in config.bin that should be made available to the user\nthe CLI should already exist in a directory named after the CLI that is the root of the tarball produced by \"oclif pack:tarballs\"",
          "hidden": true,
          "name": "additional-cli",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "defender-exclusion": {
          "description": "there is no way to set a hidden checkbox with \"true\" as a default...the user can always allow full security",
          "name": "defender-exclusion",
          "summary": "set to \"checked\" or \"unchecked\" to set the default value for the checkbox.  Set to \"hidden\" to hide the option (will let defender do its thing)",
          "default": "checked",
          "hasDynamicHelp": false,
          "multiple": false,
          "options": [
            "checked",
            "unchecked",
            "hidden"
          ],
          "type": "option"
        },
        "root": {
          "char": "r",
          "description": "path to oclif CLI root",
          "name": "root",
          "required": true,
          "default": ".",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "tarball": {
          "char": "t",
          "description": "optionally specify a path to a tarball already generated by NPM",
          "name": "tarball",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "targets": {
          "description": "comma-separated targets to pack (e.g.: win32-x64,win32-x86)",
          "name": "targets",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pack:win",
      "pluginAlias": "oclif",
      "pluginName": "oclif",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pack",
        "win.js"
      ]
    },
    "upload:deb": {
      "aliases": [],
      "args": {},
      "description": "upload deb package built with pack:deb",
      "flags": {
        "root": {
          "char": "r",
          "description": "path to oclif CLI root",
          "name": "root",
          "required": true,
          "default": ".",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "upload:deb",
      "pluginAlias": "oclif",
      "pluginName": "oclif",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "upload",
        "deb.js"
      ]
    },
    "upload:macos": {
      "aliases": [],
      "args": {},
      "description": "upload macos installers built with pack:macos",
      "flags": {
        "root": {
          "char": "r",
          "description": "path to oclif CLI root",
          "name": "root",
          "required": true,
          "default": ".",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "targets": {
          "char": "t",
          "description": "comma-separated targets to upload (e.g.: darwin-x64,darwin-arm64)",
          "name": "targets",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "upload:macos",
      "pluginAlias": "oclif",
      "pluginName": "oclif",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "upload",
        "macos.js"
      ]
    },
    "upload:tarballs": {
      "aliases": [],
      "args": {},
      "description": "upload an oclif CLI to S3\n\n\"aws-sdk\" will need to be installed as a devDependency to upload.\n",
      "flags": {
        "root": {
          "char": "r",
          "description": "path to oclif CLI root",
          "name": "root",
          "required": true,
          "default": ".",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "targets": {
          "char": "t",
          "description": "comma-separated targets to upload (e.g.: linux-arm,win32-x64)",
          "name": "targets",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "xz": {
          "description": "also upload xz",
          "name": "xz",
          "allowNo": true,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "upload:tarballs",
      "pluginAlias": "oclif",
      "pluginName": "oclif",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "upload",
        "tarballs.js"
      ]
    },
    "upload:win": {
      "aliases": [],
      "args": {},
      "description": "upload windows installers built with pack:win",
      "flags": {
        "root": {
          "char": "r",
          "description": "path to oclif CLI root",
          "name": "root",
          "required": true,
          "default": ".",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "targets": {
          "description": "comma-separated targets to pack (e.g.: win32-x64,win32-x86)",
          "name": "targets",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "upload:win",
      "pluginAlias": "oclif",
      "pluginName": "oclif",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "upload",
        "win.js"
      ]
    }
  },
  "version": "4.4.2"
}